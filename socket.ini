; The value of the "script" property in a build section will be interpreted as a
; shell command when you run "ssc build". This is the most important command
; in this file. It will do all the heavy lifting and should handle 99.9% of
; your use cases for moving files into place or tweaking platform-specific
; build artifacts. If you don't specify it, ssc will just copy everything in
; your project to the build target.

[build]

; ssc will copy everything in this directory to the build output directory.
; This is useful when you want to avoid bundling or want to use tools like
; vite, webpack, rollup, etc. to build your project and then copy output to
; the Socket bundle resources directory.
; default value: "src"
copy = "src"

; Advanced Compiler Settings (ie C++ compiler -02, -03, etc).
flags = -O3

; If true, the window will never be displayed.
headless = false

; The name of the program and executable to be output. Can't contain spaces or special characters. Required field.
name = "tapssc"

; The binary output path. It's recommended to add this path to .gitignore.
output = "dist"

; The build script
script = "node build.mjs"

[window]
height = "520"
width = "750"

[webview]
; Make root open index.html
index = "/"

[debug]
; Advanced Compiler Settings for debug purposes (ie C++ compiler -g, etc).
flags = "-g"

;
; Compiler Settings
;
flags = -O3 -g
debug_flags = -g

[meta]
version = 0.0.0
